akka {
  loglevel = INFO
  # event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  persistence {
    journal.plugin = "akka.persistence.journal.leveldb-shared"
    journal.leveldb-shared.store {
      # DO NOT USE 'native = off' IN PRODUCTION !!!
      native = off
      dir = "target/shared-journal"
    }
    snapshot-store.local.dir = "target/snapshots"
  }
  actor.deployment {
    /apns/apns-supervisor/apns-router {
      router = round-robin
      nr-of-instances = 5
    }
  }
}

# check the reference.conf in spray-can/src/main/resources for all defined settings
spray.can.server {
  # uncomment the next line for making this an HTTPS example
  #ssl-encryption = on
  idle-timeout = 30 s
  request-timeout = 10 s

  request-chunk-aggregation-limit = 0

  parsing.max-content-length = 5g
  parsing.incoming-auto-chunking-threshold-size = 45k
}

spray.can.client {
  connecting-timeout = 100s
}

spray.socketio {

  mode = "local"

  server {
    supported-transports = "websocket,xhr-polling"
    #supported-transports = "xhr-polling"

    idle-timeout = 30

    heartbeat-interval = 30
    heartbeat-timeout = 60
    close-timeout = 60

    # seconds
    actor-selection-resolve-timeout = 10

    # seconds
    namespace-subscribe-timeout = 30

    namespace-group-name = "ns-group"
  }

  seed-nodes = []

  # Fully qualified config path which holds the dispatcher configuration
  # to be used for the Namespaces actor.
  namespaces-dispatcher = "akka.actor.default-dispatcher"

  # Fully qualified config path which holds the dispatcher configuration
  # to be used for the Namespace actors.
  namespace-dispatcher = "akka.actor.default-dispatcher"
}

spray.socketio.server.enable-connectionactive-persistence = false

#akka.persistence.journal.leveldb-shared.store.dir = "target/test-shared-journal"
#akka.persistence.journal.plugin = "akka.persistence.journal.leveldb-shared"
#akka.persistence.snapshot-store.local.dir = "target/test-snapshots"

akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

campfire {
  database {
    host = "101.251.195.186"
    port = 3306
    name = "test"
    driver = "com.mysql.jdbc.Driver"
    userName = "smartlife"
    password = "smartlife"
  }
  apns {
    server {
      parallel = false
      host = "gateway.sandbox.push.apple.com"
      port = 2195
    }
    cert = "/Users/goldratio/Documents/ios/Certificates.p12"
    password = "miao1qi2"
  }
}
mongodb {
  uri = "mongodb://101.251.195.186:27017/demo"
}